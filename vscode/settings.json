{
    "terminal.integrated.fontFamily": "Hack Nerd Font",
    "terminal.integrated.shell.osx": "/usr/local/bin/zsh",
    "terminal.external.osxExec": "iTerm.app",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.fontSize": 12,
    "editor.renderWhitespace": "all",
    "workbench.colorTheme": "Monokai Dimmed",
    "editor.formatOnPaste": true,
    "editor.multiCursorModifier": "ctrlCmd",
    // Intellisense
    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": true,
        "comments": false,
        "strings": false
    },
    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",
    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 10,
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,
    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "on",
    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": true,
    // Controls how suggestions are pre-selected when showing the suggest list
    // "editor.suggestSelection": "recentlyUsed",
    // Enable word based suggestions
    "editor.wordBasedSuggestions": true,
    // Enable parameter hints
    "editor.parameterHints.enabled": true,
    "python.jediEnabled": false,
    "workbench.settings.editor": "json",
    //
    //
    // Go Mod stuff
    "go.toolsEnvVars": {
        "GO111MODULE": "auto"
    },
    // "go.useLanguageServer": true,
    // "go.alternateTools": {
    //     "go-langserver": "gopls",
    // },
    "go.languageServerExperimentalFeatures": {
        "format": true,
        "autoComplete": true,
        "diagnostics": true
    },
    //
    //
    "go.gopath": "/usr/local/Cellar/go",
    "[go]": {
        "editor.snippetSuggestions": "none",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
    },
    // 
    // 
    "go.autocompleteUnimportedPackages": true,
    //
    // 
    // The "Unkown configuration setting" error is expected 
    // "gopls": {
    //     "usePlaceholders": true,
    //     "enhancedHover": true
    // },
    // 
    // 
    "window.zoomLevel": 0,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "editor.fontSize": 12,
    "editor.snippetSuggestions": "top",
    "leetcode.hint.configWebviewMarkdown": false,
    "leetcode.hint.commentDescription": false,
    "leetcode.defaultLanguage": "golang",
    "go.formatTool": "goimports",
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
}